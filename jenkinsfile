def groovyScript

pipeline {
    agent any 
    environment { 
        PIPELINE_NAME = "Jenkins-Test"
    }
    parameters {
        string(name: 'MESSAGE', defaultValue: 'Hello World', description: 'Message to be displayed in the web page')
        choice(name: 'VERSION', choices: [ '1.0', '2.0'] , description: 'Version of the build')
        booleanParam(name: 'displayCredentials', defaultValue: false, description: 'Display credentials or not')
    }
    stages {
        stage('Init') { 
            steps {
                echo "========================================================="
                script {
                    groovyScript = load "script.groovy"
                    groovyScript.initMessage()
                }
            }
        }

        stage('Building index page') { 
            steps {
                sh "echo '${MESSAGE}' > index.html"
                script {
                    if (params.VERSION == "1.0" ) {
                        sh "echo 'Version: ${VERSION}' >> index.html"        
                    }
                    else if (params.VERSION == "2.0" ) {
                        sh "echo 'Version: ${VERSION}' >> index.html"        
                    }
                }
                
            }
        }

        stage('Displaying Credentials') { 
            when {
                expression {
                    params.displayCredentials 
                }
            }
            steps {
                withCredentials([
                    usernamePassword(credentials: 'nginx-credentials', usernameVariable: USER, passwordVariable: PWD)
                ]) {
                    sh "echo 'Nginx Credentials: ${USER} | ${PWD}' >> index.html" 
                } 
            }
        }

        stage('Building Docker Image') { 
            steps {
                echo "Building docker image"
                sh "podman build -t jenkins-nginx-test-image ."
            }          
        }
        stage('Running Docker Image') { 
            steps {
                echo "Running docker image"
                sh "podman run -d -p 8090:80 jenkins-nginx-test-image"
            }
        }

        stage('Testing Docker Image') { 
            steps {
                sh "curl http://localhost:8090"
                echo "Sleeping for mannual testing..."
                sh "sleep 60"
            }
        }

        stage('Removing Docker Image') { 
            steps {
                echo "Removing docker image"
                sh "podman image rm jenkins-nginx-test-image -f"
            }
        }
    }
    post {
        always{
            echo "========================================================="
            echo "========================================================="
        }
        success{
            echo "SUCCESS!!"
        }
        failure{
            echo "FAILURE!!"
        }
    }
}